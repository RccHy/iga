extend type Query {
    #查询节点规则列表
    nodes(id:ID,status:Int!,filter:NodeFilter,type:String!):[Node]

    #查询plus
    nodesPlus(codes:[String]!,status:Int!,treeType:String!,type:String!):[Node]
}
extend type Mutation {
    #新增节点规则
    saveNode(entity:InputNode!):Node
    #根据id删除节点规则
    deleteNode(id:ID!): Node
    #更新节点规则
    updateNode(entity:InputNode!):Node
    #应用规则     mark为true 则为回滚  false为应用
    applyNode(version:Timestamp!,mark:Boolean,type:String!):Node
#    #回滚规则
#    rollbackNode(version:Timestamp!):Node
}

# 节点规则实体
type Node{

    #主键
    id:ID

    #是否允许手工
    manual: Boolean

    #节点代码
    nodeCode:String

    #创建时间
    createTime:Timestamp

    #修改时间
    updateTime:Timestamp

    #租户
    domain:String

    #规则明细
    nodeRules:[NodeRules]
    #部门树类型
    deptTreeType:String
    #状态 0 发布 1 编辑中 2 历史
    status :Int
    #是否继承
    inherit:Boolean
    #类型
    type:String

}


# 节点规则入参
input InputNode{
    #主键
    id:ID

    #是否允许手工
    manual: Boolean

    #节点代码
    nodeCode:String

    #创建时间
    createTime:Timestamp

    #修改时间
    updateTime:Timestamp

    #    #租户
    #    domain:String
    #部门树类型
    deptTreeType:String

    #规则明细
    nodeRules:[InputNodeRules]
    #状态 0 发布 1 编辑中 2 历史
    status :Int
    #类型
    type:String


}

input NodeFilter{
    deptTreeType:stringFilter
    nodeCode:stringFilter
    status:integerFilter
}





