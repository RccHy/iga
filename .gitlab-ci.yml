image: docker:latest
variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  GIT_SSL_NO_VERIFY: "1"
#services:
#  - docker:dind
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository
stages:
  - build
  - deploy

build:prod:
  stage: build
  before_script:
    - export COMMIT_TIME=$(date +%Y%m%d)
  script:
    - "mvn package $MAVEN_CLI_OPTS -DJIB_TO_IMAGE=docker.qtgl.com.cn/product/iga:${COMMIT_TIME}   -Djib.to.auth.username=${K8S_SECRET_JIB_TO_USER} -Djib.to.auth.password=${K8S_SECRET_JIB_TO_PASSWORD} -DJIB_FROM_IMAGE='docker.qtgl.com.cn/openjdk:8-jre-alpine' -Djib.from.auth.username=${K8S_SECRET_JIB_FROM_USER} -Djib.from.auth.password=${K8S_SECRET_JIB_FROM_PASSWORD} "
  only:
    - master
  artifacts:
    paths:
      - target/*.jar
  image: maven:3.3.9-jdk-8

build:dev:
  stage: build
  script:
    - "mvn package $MAVEN_CLI_OPTS -DJIB_TO_IMAGE='docker.qtgl.com.cn/product/iga:latest'   -Djib.to.auth.username=${K8S_SECRET_JIB_TO_USER} -Djib.to.auth.password=${K8S_SECRET_JIB_TO_PASSWORD} -DJIB_FROM_IMAGE='docker.qtgl.com.cn/openjdk:8-jre-alpine' -Djib.from.auth.username=${K8S_SECRET_JIB_FROM_USER} -Djib.from.auth.password=${K8S_SECRET_JIB_FROM_PASSWORD} "
  only:
    - dev
  artifacts:
    paths:
      - target/*.jar
  image: maven:3.3.9-jdk-8

deploy:dev:
  image: lachlanevenson/k8s-kubectl:latest
  stage: deploy
  script:
     - kubectl delete -f k8s-deploy.yaml --ignore-not-found=true
     - kubectl apply -f k8s-deploy.yaml
     - kubectl apply -f k8s-service.yaml
  environment:
    name: dev
    url: https://cloud.ketanyun.cn/iga
  only:
    - dev


deploy:devel:
  image: lachlanevenson/k8s-kubectl:latest
  stage: deploy
  script:
    - sed -i   "s/iga/iga-devel/g" k8s-service.yaml
    - kubectl apply -f k8s-deploy.yaml
    - sed -i   "s/name\: iga/name\: iga-devel/g" k8s-deploy.yaml
    - kubectl apply -f k8s-deploy.yaml
    - kubectl -nketanyun rollout restart deploy iga-devel
  environment:
    name: dev
    url: http://devel.ketanyun.cn/iga
  only:
    - dev
  when: manual
